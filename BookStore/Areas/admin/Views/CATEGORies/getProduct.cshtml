@using BookStore.Help
@model IEnumerable<BookStore.Models.PRODUCT>
<table class="table table-striped table-bordered table-hover" id="dataTables-example" style="width:100%">
    <thead>
        <tr>
            <th>
                STT
            </th>
            <th>
                Tên
            </th>
            <th>
                Nhà xuất bản
            </th>
            <th>
                Loại sản phẩm
            </th>
            <th>
                Tác giả
            </th>

            <th>
                Ảnh
            </th>
            <th>
                Mô tả
            </th>
            <th>
                Meta
            </th>
            <th>
                Hiển thị
            </th>
            <th>
                Thứ tự
            </th>
            <th>
                Ngày lập
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{ var number = 1;}
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.Raw(number++)
                </td>
                <td style="text-align:left; white-space:nowrap">
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.idnxb)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.idcategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.idauthor)
                </td>
                <td>
                    <img src="~/Content/images/@item.img" width="50" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.meta)
                </td>
                <td>
                    @(item.hide.GetValueOrDefault(false) ? "Hiển thị" : "Ẩn")
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.order)
                </td>
                <td>
                    @(item.datebegin.HasValue ? item.datebegin.Value.ToString("dd/MM/yyyy") : "")
                </td>
                <td>
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "PRODUCTs", routeValues: new { id = item.idproduct }, htmlAttributes: new { data_modal = "", @class = "btn btn-default" })
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-zoom-in'></span>", "Detail", "Details", "PRODUCTs", routeValues: new { id = item.idproduct }, htmlAttributes: new { data_modal = "", @class = "btn btn-primary" })
                    @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "PRODUCTs", routeValues: new { id = item.idproduct }, htmlAttributes: new { data_modal = "", @class = "btn btn-danger" })
                </td>
            </tr>

        }
    </tbody>
</table>
<script>
        $(document).ready(function () {
            $('#dataTables-example').DataTable({
                responsive: true
            });
        });
</script>